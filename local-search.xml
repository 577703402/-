<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>docker foundation</title>
    <link href="/mijunjie/2024/01/26/docker_foundation/"/>
    <url>/mijunjie/2024/01/26/docker_foundation/</url>
    
    <content type="html"><![CDATA[<h1 id="1-1-Docker安装步骤"><a href="#1-1-Docker安装步骤" class="headerlink" title="1.1 Docker安装步骤"></a>1.1 Docker安装步骤</h1><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs docker"><br></code></pre></td></tr></table></figure><h1 id="1-2-Docker基本命令"><a href="#1-2-Docker基本命令" class="headerlink" title="1.2 Docker基本命令"></a>1.2 Docker基本命令</h1><h2 id="1-2-1-查看-Dcoker-版本"><a href="#1-2-1-查看-Dcoker-版本" class="headerlink" title="1.2.1 查看 Dcoker 版本"></a>1.2.1 查看 Dcoker 版本</h2><p>查看 Dcoker 版本包括 Docker版本号、API 版本号、对应的 Git Commit、Containcrd 和 runC 的版本信息等。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker version</span><br>Client:<br> Cloud integration: v1.<span class="hljs-number">0.33</span><br> Version:           <span class="hljs-number">24.0</span>.<span class="hljs-number">2</span><br> API version:       <span class="hljs-number">1.43</span><br> Go version:        go1.<span class="hljs-number">20.4</span><br> Git commit:        cb74dfc<br> Built:             Thu May <span class="hljs-number">25</span> <span class="hljs-number">21</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> <span class="hljs-number">2023</span><br> OS/Arch:           darwin/arm64<br> Context:           desktop-linux<br><br>Server: Docker Desktop <span class="hljs-number">4.20</span>.<span class="hljs-number">1</span> (<span class="hljs-number">110738</span>)<br> Engine:<br>  Version:          <span class="hljs-number">24.0</span>.<span class="hljs-number">2</span><br>  API version:      <span class="hljs-number">1.43</span> (minimum version <span class="hljs-number">1.12</span>)<br>  Go version:       go1.<span class="hljs-number">20.4</span><br>  Git commit:       <span class="hljs-number">659604</span>f<br>  Built:            Thu May <span class="hljs-number">25</span> <span class="hljs-number">21</span>:<span class="hljs-number">50</span>:<span class="hljs-number">59</span> <span class="hljs-number">2023</span><br>  OS/Arch:          linux/arm64<br>  Experimental:     false<br> containerd:<br>  Version:          <span class="hljs-number">1.6</span>.<span class="hljs-number">21</span><br>  GitCommit:        <span class="hljs-number">3</span>dce8eb055cbb6872793272b4f20ed16117344f8<br> runc:<br>  Version:          <span class="hljs-number">1.1</span>.<span class="hljs-number">7</span><br>  GitCommit:        v1.<span class="hljs-number">1.7</span>-<span class="hljs-number">0</span>-g860f061<br> docker-init:<br>  Version:          <span class="hljs-number">0.19</span>.<span class="hljs-number">0</span><br>  GitCommit:        de40ad0<br></code></pre></td></tr></table></figure><h2 id="1-2-2-查看-Dcoker-详细信息"><a href="#1-2-2-查看-Dcoker-详细信息" class="headerlink" title="1.2.2 查看 Dcoker 详细信息"></a>1.2.2 查看 Dcoker 详细信息</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker info</span><br>Client:       <span class="hljs-comment"># Client端</span><br> Version:    <span class="hljs-number">24.0</span>.<span class="hljs-number">2</span><br> Context:    desktop-linux<br> Debug Mode: false      <span class="hljs-comment"># 是否开启 Debug 模式</span><br> Plugins:       <span class="hljs-comment"># 个人环境中的插件</span><br>  buildx: Docker Buildx (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">10.5</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-buildx<br>  compose: Docker Compose (Docker Inc.)<br>    Version:  v2.<span class="hljs-number">18.1</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-compose<br>  dev: Docker Dev Environments (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">1.0</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-dev<br>  extension: Manages Docker extensions (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">2.19</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-extension<br>  init: Creates Docker-related starter files for your project (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">1.0</span>-beta.<span class="hljs-number">4</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-init<br>  sbom: View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc.)<br>    Version:  <span class="hljs-number">0.6</span>.<span class="hljs-number">0</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-sbom<br>  scan: Docker Scan (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">26.0</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-scan<br>  scout: Command line tool for Docker Scout (Docker Inc.)<br>    Version:  v0.<span class="hljs-number">12.0</span><br>    Path:     /Users/bytedance/.docker/cli-plugins/docker-scout<br><br>Server:         <span class="hljs-comment"># Server端</span><br> Containers: <span class="hljs-number">0</span>    <span class="hljs-comment"># 容器个数</span><br>  Running: <span class="hljs-number">0</span>      <span class="hljs-comment"># 正在运行的容器个数</span><br>  Paused: <span class="hljs-number">0</span>       <span class="hljs-comment"># 暂停的容器个数</span><br>  Stopped: <span class="hljs-number">0</span>      <span class="hljs-comment"># 停止的容器个数</span><br> Images: <span class="hljs-number">5</span>        <span class="hljs-comment"># 镜像个数</span><br> Server Version: <span class="hljs-number">24.0</span>.<span class="hljs-number">2</span>       <span class="hljs-comment"># 当前服务器 Docker Server 的版本</span><br> Storage Driver: overlay2     <span class="hljs-comment"># 存储驱动，一般为 overlay2，性能好速度快</span><br>                              <span class="hljs-comment"># 其他驱动 aufs、overlay、brtfs</span><br>  Backing Filesystem: extfs   <span class="hljs-comment"># 服务器文件系统</span><br>  Supports d_type: true       <span class="hljs-comment"># 目录条目类型，用来表示一个文件是文件、管道还是套接字。</span><br>                              <span class="hljs-comment"># 在格式化 xfs 文件系统时，必须指定 ftype=1</span><br>  Using metacopy: false<br>  Native Overlay Diff: true<br>  userxattr: false<br> Logging Driver: json-file    <span class="hljs-comment"># 日志驱动，json-file 表示存在本地</span><br> Cgroup Driver: cgroupfs      <span class="hljs-comment"># 限制和隔离的驱动，生产环境建议使用 systemd</span><br> Cgroup Version: <span class="hljs-number">2</span><br> Plugins:<br>  <span class="hljs-keyword">Volume</span><span class="language-bash">: <span class="hljs-built_in">local</span></span><br>  Network: bridge host ipvlan macvlan null overlay<br>  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog   <span class="hljs-comment"># Docker支持的日志驱动</span><br> Swarm: inactive      <span class="hljs-comment"># Docker官方的容器编排工具，inactive不开启，active开启</span><br> Runtimes: io.containerd.runc.v2 runc<br> Default Runtime: runc<br> Init Binary: docker-init<br> containerd version: <span class="hljs-number">3</span>dce8eb055cbb6872793272b4f20ed16117344f8<br> runc version: v1.<span class="hljs-number">1.7</span>-<span class="hljs-number">0</span>-g860f061<br> init version: de40ad0<br> Security Options:<br>  seccomp<br>   Profile: builtin<br>  cgroupns<br> Kernel Version: <span class="hljs-number">5.15</span>.<span class="hljs-number">49</span>-linuxkit-pr<br> Operating System: Docker Desktop<br> OSType: linux<br> Architecture: aarch64<br> CPUs: <span class="hljs-number">4</span><br> Total Memory: <span class="hljs-number">7.667</span>GiB<br> Name: docker-desktop<br> ID: <span class="hljs-number">3967</span>aff3-ef2e-<span class="hljs-number">4400</span>-<span class="hljs-number">8454</span>-c25ef54214b6<br> Docker Root Dir: /var/lib/docker     <span class="hljs-comment"># Docker根目录，生产环境建议使用SSD硬盘，或者独立的磁盘，不要和系统盘用同一个磁盘。</span><br> Debug Mode: false<br> HTTP Proxy: http.docker.internal:<span class="hljs-number">3128</span><br> HTTPS Proxy: http.docker.internal:<span class="hljs-number">3128</span><br> No Proxy: hubproxy.docker.internal<br> Experimental: false<br> Insecure Registries:<br>  hubproxy.docker.internal:<span class="hljs-number">5555</span><br>  <span class="hljs-number">127.0</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">8</span><br> Live Restore Enabled: false      <span class="hljs-comment"># Docker热更新，生产环境建议设置为true</span><br></code></pre></td></tr></table></figure><h2 id="1-2-3-搜索镜像"><a href="#1-2-3-搜索镜像" class="headerlink" title="1.2.3 搜索镜像"></a>1.2.3 搜索镜像</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker search nginx(镜像名称)</span><br>NAME                               DESCRIPTION                                      STARS     OFFICIAL   AUTOMATED<br>nginx                              Official build of Nginx.                         <span class="hljs-number">19549</span>     [OK]<br>...<br></code></pre></td></tr></table></figure><h2 id="1-2-4-拉取-下载镜像"><a href="#1-2-4-拉取-下载镜像" class="headerlink" title="1.2.4 拉取&#x2F;下载镜像"></a>1.2.4 拉取&#x2F;下载镜像</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker pull harbor.xxx.net/frontend:v1</span><br>拉取公网上的Nging镜像：<br><span class="hljs-comment"># docker pull nginx（不指定版本号默认为latest）</span><br><span class="hljs-comment"># docker pull nginx:1.21（指定版本号为1.21）</span><br>Using default tag: latest<br>latest: Pulling <span class="hljs-keyword">from</span> library/nginx<br>a5573528b1f0: Pull complete <br><span class="hljs-number">8897</span>d65c8417: Pull complete <br>fbc138d1d206: Pull complete <br><span class="hljs-number">06</span>f386eb9182: Pull complete <br>aeb2f3db77c3: Pull complete <br><span class="hljs-number">64</span>fb762834ec: Pull complete <br>e5a7e61f6ff4: Pull complete <br>Digest: sha256:<span class="hljs-number">4</span>c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac<br>Status: Downloaded newer image for nginx:latest<br>docker.io/library/nginx:latest<br></code></pre></td></tr></table></figure><h2 id="1-2-5-查看本地镜像"><a href="#1-2-5-查看本地镜像" class="headerlink" title="1.2.5 查看本地镜像"></a>1.2.5 查看本地镜像</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker images</span><br>REPOSITORY   TAG       IMAGE ID       CREATED        SIZE<br>nginx        latest    <span class="hljs-number">6</span>c7be49d2a11   <span class="hljs-number">3</span> months ago   <span class="hljs-number">192</span>MB<br></code></pre></td></tr></table></figure><h2 id="1-2-6-更改镜像-tag"><a href="#1-2-6-更改镜像-tag" class="headerlink" title="1.2.6 更改镜像 tag"></a>1.2.6 更改镜像 tag</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker tag nginx:latest nginx-v2:1.1</span><br>REPOSITORY   TAG       IMAGE ID       CREATED        SIZE<br>nginx-v2     <span class="hljs-number">1.1</span>       <span class="hljs-number">6</span>c7be49d2a11   <span class="hljs-number">3</span> months ago   <span class="hljs-number">192</span>MB<br>nginx        latest    <span class="hljs-number">6</span>c7be49d2a11   <span class="hljs-number">3</span> months ago   <span class="hljs-number">192</span>MB<br><span class="hljs-comment"># docker rmi nginx-v2:1.1</span><br></code></pre></td></tr></table></figure><h2 id="1-2-7-镜像仓库登陆"><a href="#1-2-7-镜像仓库登陆" class="headerlink" title="1.2.7 镜像仓库登陆"></a>1.2.7 镜像仓库登陆</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker login</span><br><span class="hljs-comment"># docker logout</span><br></code></pre></td></tr></table></figure><h2 id="1-2-8-推送本地镜像到远程仓库"><a href="#1-2-8-推送本地镜像到远程仓库" class="headerlink" title="1.2.8 推送本地镜像到远程仓库"></a>1.2.8 推送本地镜像到远程仓库</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker push 路径/镜像名称</span><br></code></pre></td></tr></table></figure><h2 id="1-2-9-启动容器"><a href="#1-2-9-启动容器" class="headerlink" title="1.2.9 启动容器"></a>1.2.9 启动容器</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs docker">使用 <span class="hljs-keyword">run</span><span class="language-bash"> -it 前台启动一个容器</span><br><span class="hljs-comment"># docker run -it nginx bash（bash是启动时的shell）</span><br>root@<span class="hljs-number">8975</span>c95675ad:/<span class="hljs-comment">#</span><br>如果一个镜像需要一直运行，可以使用-d 进行后台启动:<br><span class="hljs-comment"># docker run -itd nginx bash</span><br>ad53bd99822ba9ce116bf7a2d49a2428cbda6303cdb6af73b21d22749f245abf<br>也可以使用--restart=always，如果容器异常自动重启<br><span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE     COMMAND                   CREATED         STATUS         PORTS     NAMES<br>ad53bd99822b   nginx     <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   <span class="hljs-number">8</span> seconds ago   Up <span class="hljs-number">7</span> seconds   <span class="hljs-number">80</span>/tcp    competent_sanderson<br></code></pre></td></tr></table></figure><h2 id="1-2-10-端口映射"><a href="#1-2-10-端口映射" class="headerlink" title="1.2.10 端口映射"></a>1.2.10 端口映射</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker run -it -p 1234:80 nginx bash</span><br><span class="hljs-comment"># docker run -itd -p 1234:80 nginx bash</span><br></code></pre></td></tr></table></figure><h2 id="1-2-11-查看日志"><a href="#1-2-11-查看日志" class="headerlink" title="1.2.11 查看日志"></a>1.2.11 查看日志</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker logs -f 容器ID/容器名称 --tail </span><br><span class="hljs-number">172.17</span>.<span class="hljs-number">0.1</span> - - [<span class="hljs-number">31</span>/Jan/<span class="hljs-number">2024</span>:<span class="hljs-number">06</span>:<span class="hljs-number">14</span>:<span class="hljs-number">35</span> +<span class="hljs-number">0000</span>] <span class="hljs-string">&quot;GET / HTTP/1.1&quot;</span> <span class="hljs-number">304</span> <span class="hljs-number">0</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36&quot;</span> <span class="hljs-string">&quot;-&quot;</span><br></code></pre></td></tr></table></figure><h2 id="1-2-12-查看容器详细信息"><a href="#1-2-12-查看容器详细信息" class="headerlink" title="1.2.12 查看容器详细信息"></a>1.2.12 查看容器详细信息</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker inspect 容器ID</span><br>[<br>    &#123;<br>        <span class="hljs-string">&quot;Id&quot;</span>: <span class="hljs-string">&quot;ad53bd99822ba9ce116bf7a2d49a2428cbda6303cdb6af73b21d22749f245abf&quot;</span>,<br>        <span class="hljs-string">&quot;Created&quot;</span>: <span class="hljs-string">&quot;2024-01-30T07:24:17.87695363Z&quot;</span>,<br>        <span class="hljs-string">&quot;Path&quot;</span>: <span class="hljs-string">&quot;/docker-entrypoint.sh&quot;</span>,<br>        <span class="hljs-string">&quot;Args&quot;</span>: [<br>            <span class="hljs-string">&quot;bash&quot;</span><br>        ],<br>        <span class="hljs-string">&quot;State&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;Status&quot;</span>: <span class="hljs-string">&quot;running&quot;</span>,<br>            <span class="hljs-string">&quot;Running&quot;</span>: true,<br>....<br><span class="hljs-string">&quot;Gateway&quot;</span>: <span class="hljs-string">&quot;172.17.0.1&quot;</span>,<br>                    <span class="hljs-string">&quot;IPAddress&quot;</span>: <span class="hljs-string">&quot;172.17.0.2&quot;</span>,<br>                    <span class="hljs-string">&quot;IPPrefixLen&quot;</span>: <span class="hljs-number">16</span>,<br>                    <span class="hljs-string">&quot;IPv6Gateway&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                    <span class="hljs-string">&quot;GlobalIPv6Address&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                    <span class="hljs-string">&quot;GlobalIPv6PrefixLen&quot;</span>: <span class="hljs-number">0</span>,<br>                    <span class="hljs-string">&quot;MacAddress&quot;</span>: <span class="hljs-string">&quot;02:42:ac:11:00:02&quot;</span>,<br>                    <span class="hljs-string">&quot;DriverOpts&quot;</span>: null<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>]<br></code></pre></td></tr></table></figure><h2 id="1-2-13-查看当前运行的容器"><a href="#1-2-13-查看当前运行的容器" class="headerlink" title="1.2.13 查看当前运行的容器"></a>1.2.13 查看当前运行的容器</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE     COMMAND                   CREATED        STATUS        PORTS                  NAMES<br>d6c106baa008   nginx     <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   <span class="hljs-number">4</span> hours ago    Up <span class="hljs-number">4</span> hours    <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">1234</span>-&gt;<span class="hljs-number">80</span>/tcp   eloquent_carson<br>ad53bd99822b   nginx     <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   <span class="hljs-number">23</span> hours ago   Up <span class="hljs-number">23</span> hours   <span class="hljs-number">80</span>/tcp                 competent_sanderson<br></code></pre></td></tr></table></figure><p>查看所有容器，包括已经退出的容器。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker ps -a</span><br>...<br></code></pre></td></tr></table></figure><p>查看正在运行的容器，只显示容器ID。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker ps -q</span><br>...<br></code></pre></td></tr></table></figure><p>查看所有容器的ID，包括已经退出的容器ID。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker ps -aq</span><br>d6c106baa008<br>...<br></code></pre></td></tr></table></figure><h2 id="1-2-14-删除已经退出的容器记录"><a href="#1-2-14-删除已经退出的容器记录" class="headerlink" title="1.2.14 删除已经退出的容器记录"></a>1.2.14 删除已经退出的容器记录</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker rm 容器ID</span><br>eba229c7c0ae<br></code></pre></td></tr></table></figure><h2 id="1-2-15-进入到一个后台运行的容器"><a href="#1-2-15-进入到一个后台运行的容器" class="headerlink" title="1.2.15 进入到一个后台运行的容器"></a>1.2.15 进入到一个后台运行的容器</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker exec -it 容器ID bash</span><br>root@<span class="hljs-number">9</span>e8cc59e0c97:/<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="1-2-16-停止-启动容器"><a href="#1-2-16-停止-启动容器" class="headerlink" title="1.2.16 停止&#x2F;启动容器"></a>1.2.16 停止&#x2F;启动容器</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker stop 容器ID</span><br><span class="hljs-comment"># docker start 容器ID</span><br></code></pre></td></tr></table></figure><h2 id="1-2-17-文件拷贝"><a href="#1-2-17-文件拷贝" class="headerlink" title="1.2.17 文件拷贝"></a>1.2.17 文件拷贝</h2><p>将本机的文件拷贝到容器，拷贝支持双向拷贝，也支持将容器的内部文件拷贝到宿主机。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker cp test/index.html 34a793d26866:/usr/share/nginx/html/</span><br><span class="hljs-comment"># docker cp 34a793d26866:/usr/share/nginx/html/index.html .</span><br></code></pre></td></tr></table></figure><h2 id="1-2-18-数据持久化"><a href="#1-2-18-数据持久化" class="headerlink" title="1.2.18 数据持久化"></a>1.2.18 数据持久化</h2><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs docker"><span class="hljs-comment"># docker run -itd -v /Users/bytedance/test:/usr/share/nginx/html -p 1234:80 nginx</span><br>f35aae1e06702312db253a3afd521759d17c42f7fb37a61a66a689549d8ad87a<br><span class="hljs-comment"># mkdir test</span><br><span class="hljs-comment"># echo &quot;这是一个测试文件。&quot; &gt; test/index.html</span><br><span class="hljs-comment"># curl 0.0.0.0:1234</span><br></code></pre></td></tr></table></figure><h1 id="1-3-DockerFile的编写"><a href="#1-3-DockerFile的编写" class="headerlink" title="1.3 DockerFile的编写"></a>1.3 DockerFile的编写</h1><h2 id="1-3-1-Dockerfile-的常用命令"><a href="#1-3-1-Dockerfile-的常用命令" class="headerlink" title="1.3.1 Dockerfile 的常用命令"></a>1.3.1 Dockerfile 的常用命令</h2><p>⚫ FROM: 继承基础镜像<br>⚫ MAINTAINER: 镜像制作作者的信息，已弃用，使用LABEL替代 ⚫ LABEL:k&#x3D;v形式，将一些元数据添加至镜像<br>⚫ RUN: 用来执行shell命令<br>⚫ EXPOSE: 暴露端口号<br>⚫ CMD: 启动容器默认执行的命令，会被覆盖<br>⚫ ENTRYPOINT: 启动容器真正执行的命令，不会被覆盖<br>⚫ ENV: 配置环境变量<br>⚫ ADD: 复制文件到容器，一般拷贝文件，压缩包自动解压<br>⚫ COPY: 复制文件到容器，一般拷贝目录<br>⚫ WORKDIR: 设置容器的工作目录<br>⚫ USER:容器使用的用户<br>⚫ ARG: 设置编译镜像时传入的参数</p><h2 id="1-3-2-构建镜像"><a href="#1-3-2-构建镜像" class="headerlink" title="1.3.2 构建镜像"></a>1.3.2 构建镜像</h2><p>总结：</p><ol><li>相应命令需要多加练习。</li><li>容器每次启动，都会以最干净的状态进行启动。</li><li>笔记参考来源：<a href="https://edu.51cto.com/lecturer/11062970.html">https://edu.51cto.com/lecturer/11062970.html</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Create github.io</title>
    <link href="/mijunjie/2024/01/19/create_github_io/"/>
    <url>/mijunjie/2024/01/19/create_github_io/</url>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">/bin/bash -c <span class="hljs-string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br>(echo; echo <span class="hljs-string">&#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27;</span>) &gt;&gt; <span class="hljs-regexp">/Users/</span>bytedance/.<span class="hljs-property">bash_profile</span><br><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;$(/opt/homebrew/bin/brew shellenv)&quot;</span><br>brew  install git-core gitnode npm node<br>npm install hexo-cli -g<br>mkdir hexo <span class="hljs-comment">//创建空目录</span><br>cd hexo | hexo init<br><br>vim _config.<span class="hljs-property">yml</span><br><span class="hljs-attr">url</span>: your url<br><span class="hljs-attr">root</span>: ./<br><span class="hljs-attr">deploy</span>:<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attr">repo</span>: ssh-git<br>  <span class="hljs-attr">branch</span>: master<br>hexo clean | hexo generate | hexo deploy<br>或<br>hexo clean | hexo g -d <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>create github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
